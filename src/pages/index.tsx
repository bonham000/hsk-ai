import Head from "next/head";
import { useState } from "react";
import { HSK_MAP } from "~/chinese/hsk";
import { sentenceMapLevel1 } from "~/chinese/sentences";
import type HskEntry from "~/types/HskEntry";
import { type ModelSentences } from "~/types/SentenceMap";

type WordCardProps = {
  word: HskEntry;
  modelSentences: ModelSentences;
};

function WordCard(props: WordCardProps) {
  return (
    <div className="flex flex-row p-4 gap-4 w-3/4 bg-slate-900 rounded-3xl">
      <div className="w-4/12 p-8 flex justify-around items-center bg-slate-800 rounded-3xl">
        <p className="text-[164px] whitespace-nowrap">
          {props.word.traditional}
        </p>
      </div>
      <div className="w-8/12 p-8 flex flex-col flex-grow justify-around bg-slate-800 rounded-3xl">
        {props.modelSentences["gpt-3.5-turbo"].map((sentence) => {
          return (
            <p
              className="text-[44px] font-light"
              key={sentence.replaceAll(" ", "")}
            >
              {sentence}
            </p>
          );
        })}
      </div>
    </div>
  );
}

export default function Home() {
  const [index, setIndex] = useState(0);
  const hsk1 = HSK_MAP[1];
  const words = hsk1.words;
  const word = words[index]!;
  const nextWord = words[index + 1];
  const hasNext = nextWord != null && nextWord.traditional in sentenceMapLevel1;
  const sentences = sentenceMapLevel1[word.traditional]!;

  const next = () => {
    setIndex((cur) => (hasNext ? cur + 1 : cur));
  };

  const previous = () => {
    setIndex((cur) => (cur > 0 ? cur - 1 : cur));
  };

  return (
    <>
      <Head>
        <title>HSK AI</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen justify-center">
        <div className="container flex flex-col items-center justify-around px-4 py-16 ">
          <h1 className="text-5xl font-extrabold tracking-tight sm:text-[5rem] m-2">
            HSK AI
          </h1>
          <WordCard word={word} modelSentences={sentences} />
          <div className="flex gap-8 bg-slate-950 p-4 rounded-3xl">
            <button
              disabled={index === 0}
              onClick={previous}
              className="bg-slate-800 hover:bg-slate-900 w-64 text-white font-bold py-4 px-8 text-3xl rounded-2xl"
            >
              Previous
            </button>
            <button
              disabled={!hasNext}
              onClick={next}
              className="bg-slate-800 hover:bg-slate-900 w-64 text-white font-bold py-4 px-8 text-3xl rounded-2xl"
            >
              Next
            </button>
          </div>
        </div>
      </main>
    </>
  );
}
